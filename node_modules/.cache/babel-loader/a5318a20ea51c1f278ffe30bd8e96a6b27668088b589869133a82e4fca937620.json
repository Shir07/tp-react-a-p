{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prisc\\\\Desktop\\\\react-todo-app-master\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport TaskForm from \"./TaskForm\";\nimport Task from \"./Task\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    setTasks(tasks || []);\n  }, []);\n\n  //Agregar tarea\n\n  function agregarTask(name) {\n    setTasks(prev => {\n      return [...prev, {\n        name: name,\n        hecho: false\n      }];\n    });\n  }\n\n  //Eliminar Tarea\n\n  function eliminarTask(indexEliminar) {\n    setTasks(prev => {\n      return prev.filter((taskObject, index) => index !== indexEliminar);\n    });\n  }\n  function actualizarTaskHecho(taskIndex, nuevoHecho) {\n    setTasks(prev => {\n      const nuevosTasks = [...prev];\n      nuevosTasks[taskIndex].done = nuevoHecho;\n      return nuevosTasks;\n    });\n  }\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n  function renombrarTask(index, newName) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[index].name = newName;\n      return newTasks;\n    });\n  }\n  // Realizados\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Realizados\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4bpbFjFTomrP3kHy8a7XBmQr11M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TaskForm","Task","useEffect","useState","App","tasks","setTasks","length","localStorage","setItem","JSON","stringify","parse","getItem","agregarTask","name","prev","hecho","eliminarTask","indexEliminar","filter","taskObject","index","actualizarTaskHecho","taskIndex","nuevoHecho","nuevosTasks","done","numberComplete","t","numberTotal","renombrarTask","newName","newTasks"],"sources":["C:/Users/prisc/Desktop/react-todo-app-master/src/App.js"],"sourcesContent":["import './App.css';\nimport TaskForm from \"./TaskForm\";\nimport Task from \"./Task\";\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n  const [tasks,setTasks] = useState([]);\n\n  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    setTasks(tasks || []);\n  }, []);\n\n  //Agregar tarea\n\n  function agregarTask(name) {\n    setTasks(prev => {\n      return [...prev, {name:name,hecho:false}];\n    });\n  }\n\n  //Eliminar Tarea\n\n  function eliminarTask(indexEliminar) {\n    setTasks(prev => {\n      return prev.filter((taskObject,index) => index !== indexEliminar);\n    });\n  }\n\n  function actualizarTaskHecho(taskIndex, nuevoHecho) {\n    setTasks(prev => {\n      const nuevosTasks = [...prev];\n      nuevosTasks[taskIndex].done = nuevoHecho;\n      return nuevosTasks;\n    });\n  }\n\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n  \n\n  function renombrarTask(index,newName) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[index].name = newName;\n      return newTasks;\n    })\n  }\n// Realizados\n  return (\n    <main>\n      <h1>{numberComplete}/{numberTotal} Realizados</h1>\n      </main>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAE1C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,IAAIG,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;IACxBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEXH,SAAS,CAAC,MAAM;IACd,MAAMG,KAAK,GAAGK,IAAI,CAACE,KAAK,CAACJ,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC,CAAC;IACvDP,QAAQ,CAACD,KAAK,IAAI,EAAE,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,SAASS,WAAW,CAACC,IAAI,EAAE;IACzBT,QAAQ,CAACU,IAAI,IAAI;MACf,OAAO,CAAC,GAAGA,IAAI,EAAE;QAACD,IAAI,EAACA,IAAI;QAACE,KAAK,EAAC;MAAK,CAAC,CAAC;IAC3C,CAAC,CAAC;EACJ;;EAEA;;EAEA,SAASC,YAAY,CAACC,aAAa,EAAE;IACnCb,QAAQ,CAACU,IAAI,IAAI;MACf,OAAOA,IAAI,CAACI,MAAM,CAAC,CAACC,UAAU,EAACC,KAAK,KAAKA,KAAK,KAAKH,aAAa,CAAC;IACnE,CAAC,CAAC;EACJ;EAEA,SAASI,mBAAmB,CAACC,SAAS,EAAEC,UAAU,EAAE;IAClDnB,QAAQ,CAACU,IAAI,IAAI;MACf,MAAMU,WAAW,GAAG,CAAC,GAAGV,IAAI,CAAC;MAC7BU,WAAW,CAACF,SAAS,CAAC,CAACG,IAAI,GAAGF,UAAU;MACxC,OAAOC,WAAW;IACpB,CAAC,CAAC;EACJ;EAEA,MAAME,cAAc,GAAGvB,KAAK,CAACe,MAAM,CAACS,CAAC,IAAIA,CAAC,CAACF,IAAI,CAAC,CAACpB,MAAM;EACvD,MAAMuB,WAAW,GAAGzB,KAAK,CAACE,MAAM;EAIhC,SAASwB,aAAa,CAACT,KAAK,EAACU,OAAO,EAAE;IACpC1B,QAAQ,CAACU,IAAI,IAAI;MACf,MAAMiB,QAAQ,GAAG,CAAC,GAAGjB,IAAI,CAAC;MAC1BiB,QAAQ,CAACX,KAAK,CAAC,CAACP,IAAI,GAAGiB,OAAO;MAC9B,OAAOC,QAAQ;IACjB,CAAC,CAAC;EACJ;EACF;EACE,oBACE;IAAA,uBACE;MAAA,WAAKL,cAAc,OAAGE,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA;EAAiB;IAAA;IAAA;IAAA;EAAA,QAC3C;AAEb;AAAC,GAvDQ1B,GAAG;AAAA,KAAHA,GAAG;AAyDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}