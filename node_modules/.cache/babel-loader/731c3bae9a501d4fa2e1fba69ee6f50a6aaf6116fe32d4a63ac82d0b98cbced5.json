{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prisc\\\\Desktop\\\\react-todo-app-master\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport TaskForm from \"./TaskForm\";\nimport Task from \"./Task\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    setTasks(tasks || []);\n  }, []);\n  function agregarTask(nombre) {\n    setTasks(prev => {\n      return [...prev, {\n        nombre: nombre,\n        hecho: false\n      }];\n    });\n  }\n  function eliminarTask(indexEliminar) {\n    setTasks(prev => {\n      return prev.filter((taskObject, index) => index !== indexEliminar);\n    });\n  }\n  function actualizarTaskHecho(taskIndex, nuevoHecho) {\n    setTasks(prev => {\n      const nuevosTasks = [...prev];\n      nuevosTasks[taskIndex].done = nuevoHecho;\n      return nuevosTasks;\n    });\n  }\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n  function getMessage() {\n    const percentage = numberComplete / numberTotal * 100;\n    if (percentage === 100) {\n      return 'A por ello!';\n    }\n  }\n  function renombrarTask(index, nuevoNombre) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[index].name = nuevoNombre;\n      return newTasks;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Realizados\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: agregarTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      ...task,\n      onRename: nuevoNombre => renombrarTask(index, nuevoNombre),\n      onTrash: () => eliminarTask(index),\n      onToggle: done => actualizarTaskHecho(index, done)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4bpbFjFTomrP3kHy8a7XBmQr11M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TaskForm","Task","useEffect","useState","App","tasks","setTasks","length","localStorage","setItem","JSON","stringify","parse","getItem","agregarTask","nombre","prev","hecho","eliminarTask","indexEliminar","filter","taskObject","index","actualizarTaskHecho","taskIndex","nuevoHecho","nuevosTasks","done","numberComplete","t","numberTotal","getMessage","percentage","renombrarTask","nuevoNombre","newTasks","name","map","task"],"sources":["C:/Users/prisc/Desktop/react-todo-app-master/src/App.js"],"sourcesContent":["import './App.css';\nimport TaskForm from \"./TaskForm\";\nimport Task from \"./Task\";\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n  const [tasks,setTasks] = useState([]);\n\n  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    setTasks(tasks || []);\n  }, []);\n\n  function agregarTask(nombre) {\n    setTasks(prev => {\n      return [...prev, {nombre:nombre,hecho:false}];\n    });\n  }\n\n  function eliminarTask(indexEliminar) {\n    setTasks(prev => {\n      return prev.filter((taskObject,index) => index !== indexEliminar);\n    });\n  }\n\n  function actualizarTaskHecho(taskIndex, nuevoHecho) {\n    setTasks(prev => {\n      const nuevosTasks = [...prev];\n      nuevosTasks[taskIndex].done = nuevoHecho;\n      return nuevosTasks;\n    });\n  }\n\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n  function getMessage() {\n    const percentage = numberComplete/numberTotal * 100;\n    if (percentage === 100) {\n      return 'A por ello!';\n    }\n\n \n  }\n\n  function renombrarTask(index,nuevoNombre) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[index].name = nuevoNombre;\n      return newTasks;\n    })\n  }\n\n  return (\n    <main>\n      <h1>{numberComplete}/{numberTotal} Realizados</h1>\n      <h2>{getMessage()}</h2>\n      <TaskForm onAdd={agregarTask} />\n      {tasks.map((task,index) => (\n        <Task {...task}\n              onRename={nuevoNombre => renombrarTask(index,nuevoNombre)}\n              onTrash={() => eliminarTask(index)}\n              onToggle={done => actualizarTaskHecho(index, done)} />\n      ))}\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}